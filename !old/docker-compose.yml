services:
  postgres:
    image: 'postgres:15-alpine'
    hostname: postgres
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

    healthcheck:
#      test: ["CMD", "psql", "-U", "${POSTGRES_USER}", "${POSTGRES_DB}"]
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: "10s"
      timeout: "5s"
      retries: 10
    networks:
      - minio-network
    volumes:
      - pg_data_15:/var/lib/postgresql/data

  metastore:
    build: .
    container_name: metastore
    depends_on:
      postgres:
        condition: service_healthy

    environment:
      - DATABASE_HOST=postgres
      - DATABASE_DB=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - S3_BUCKET
      - S3_PREFIX
      - METASTORE_TYPE=postgresql
      - METASTORE_DB_HOSTNAME=postgres
      - METASTORE_DB_PORT=5432
    ports:
      - '9083:9083'
    networks:
      - minio-network

  minio:
    image: 'minio/minio:latest'
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server --console-address ":9001" /data
    networks:
      - minio-network

volumes:
  minio-data:
    driver: local
  pg_data_15:
    driver: local

networks:
  minio-network:
    driver: bridge
    name: minio-network
